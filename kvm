# Nested Virtualization
Add "options kvm_intel nested=1" to /etc/modprobe.d/kvm_intel.conf
Enable the "host passthrough" mode to forward all CPU features to the guest system:
- If using QEMU, run the guest virtual machine with the following command: qemu-system-x86_64 -enable-kvm -cpu host.
- If using virt-manager, change the CPU model to host-passthrough (it will not be in the list, just write it in the box).
- If using virsh, use virsh edit vm-name and change the CPU line to <cpu mode='host-passthrough' check='partial'/>

#Commands
##Install QEMU core and libvirt abstraction CLI.
sudo pacman -S qemu libvirt
##Install tools to manage basic networking for VMs.
ebtables dnsmasq bridge-utils openbsd-netcat
##Install libvirt GUI management.
sudo pacman -S virt-manager
sudo systemctl enable libvirtd.service
sudo systemctl start libvirtd.service

sudo touch /etc/modprobe.d/blacklist-ipv6.conf
sudo echo "install ipv6 /bin/true" >> /etc/modprobe.d/blacklist-ipv6.conf
sudo echo "blacklist ipv6" >> /etc/modprobe.d/blacklist-ipv6.conf
# reboot system


# Edit /etc/lvm/lvm.conf
issue_discards = 1 # enables TRIM

# Ensure package "lvm2" is installed.

# See what is accessing a certain device:
sudo  fuser -m -v /dev/sda5

# Load and install virtio kernel module:
sudo touch /etc/modules-load.d/virtio.conf
sudo echo "virtio" >> /etc/modules-load.d/virtio.conf
sudo modprobe virtio

/etc/modprobe.d/kvm_intel.conf
options kvm_intel nested=1

# UEFI support for VMs:
sudo pacman -Syu ovmf --noconfirm
echo 'nvram = [' | sudo tee --append /etc/libvirt/qemu.conf
echo '"/usr/share/ovmf/x64/OVMF_CODE.fd:/usr/share/ovmf/x64/OVMF_VARS.fd"' | sudo tee --append /etc/libvirt/qemu.conf
echo ']'  | sudo tee --append /etc/libvirt/qemu.conf
sudo systemctl restart libvirtd.service

# Install SPICE viewer:
sudo pacman -Syu virt-viewer --noconfirm

# Enable VT-d on Intel processor:
sudo nano /boot/loader/entries/arch.conf
# add "intel_iommu=on iommu=pt" to options.
